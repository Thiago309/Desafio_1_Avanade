# PostgreSQL mudar para (prod), quando utilizar o Banco de dados em Nuvem Railway.

# Este arquivo é utilizado para definir propriedades específicas para o ambiente de produção
# da sua aplicação Spring Boot.

# Especifica o dialeto do Hibernate a ser utilizado. No caso, está definido para o PostgreSQL, permitindo que
# o Hibernate gere SQLs compatíveis com esse banco de dados.
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect

# Define a URL de conexão com o banco de dados. Utiliza variáveis de ambiente (PGHOST, PGPORT, PGDATABASE) com
# valores padrão fornecidos após os dois-pontos. Isso permite flexibilidade na configuração, especialmente útil em
# ambientes de nuvem como o Railway.
spring.datasource.url=jdbc:postgresql://${PGHOST:nozomi.proxy.rlwy.net}:${PGPORT:31992}/${PGDATABASE:railway}

# Especificam as credenciais de acesso ao banco de dados.
spring.datasource.username=${DATABASE_USER:postgres}
spring.datasource.password=${DATABASE_PASSWORD:FFWAAxPjwARSuKRBbkTEyUxmpCXtsrdN}

# Define o driver JDBC a ser utilizado para a conexão com o PostgreSQL.
spring.datasource.driver-class-name=org.postgresql.Driver

# JPA
spring.jpa.hibernate.ddl-auto=create
# validate: O Hibernate valida se o esquema do banco de dados está em conformidade com as entidades JPA,
# sem realizar alterações.
# update: O Hibernate atualiza o esquema do banco de dados para refletir as alterações nas entidades JPA,
# preservando os dados existentes.
# none: O Hibernate não realiza nenhuma ação relacionada ao esquema do banco de dados.

